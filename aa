==5663== Memcheck, a memory error detector
==5663== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==5663== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==5663== Command: ./a.out
==5663== Parent PID: 30411
==5663== 
==5663== Conditional jump or move depends on uninitialised value(s)
==5663==    at 0x4C3702D: strchrnul (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5663==    by 0x52E4431: __find_specmb (printf-parse.h:108)
==5663==    by 0x52E4431: vfprintf (vfprintf.c:1320)
==5663==    by 0x53BB168: __vsnprintf_chk (vsnprintf_chk.c:63)
==5663==    by 0x4E52416: ??? (in /lib/x86_64-linux-gnu/libncurses.so.5.9)
==5663==    by 0x4E4D9EE: vwprintw (in /lib/x86_64-linux-gnu/libncurses.so.5.9)
==5663==    by 0x4E4DC51: mvprintw (in /lib/x86_64-linux-gnu/libncurses.so.5.9)
==5663==    by 0x108CDB: desenha_item (spc.c:59)
==5663==    by 0x109194: desenha_canhao (spc.c:177)
==5663==    by 0x1097C7: main (spc.c:310)
==5663== 
==5663== Conditional jump or move depends on uninitialised value(s)
==5663==    at 0x4C37045: strchrnul (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5663==    by 0x52E4431: __find_specmb (printf-parse.h:108)
==5663==    by 0x52E4431: vfprintf (vfprintf.c:1320)
==5663==    by 0x53BB168: __vsnprintf_chk (vsnprintf_chk.c:63)
==5663==    by 0x4E52416: ??? (in /lib/x86_64-linux-gnu/libncurses.so.5.9)
==5663==    by 0x4E4D9EE: vwprintw (in /lib/x86_64-linux-gnu/libncurses.so.5.9)
==5663==    by 0x4E4DC51: mvprintw (in /lib/x86_64-linux-gnu/libncurses.so.5.9)
==5663==    by 0x108CDB: desenha_item (spc.c:59)
==5663==    by 0x109194: desenha_canhao (spc.c:177)
==5663==    by 0x1097C7: main (spc.c:310)
==5663== 
==5663== Conditional jump or move depends on uninitialised value(s)
==5663==    at 0x52E45DF: vfprintf (vfprintf.c:1332)
==5663==    by 0x53BB168: __vsnprintf_chk (vsnprintf_chk.c:63)
==5663==    by 0x4E52416: ??? (in /lib/x86_64-linux-gnu/libncurses.so.5.9)
==5663==    by 0x4E4D9EE: vwprintw (in /lib/x86_64-linux-gnu/libncurses.so.5.9)
==5663==    by 0x4E4DC51: mvprintw (in /lib/x86_64-linux-gnu/libncurses.so.5.9)
==5663==    by 0x108CDB: desenha_item (spc.c:59)
==5663==    by 0x109194: desenha_canhao (spc.c:177)
==5663==    by 0x1097C7: main (spc.c:310)
==5663== 
==5663== Invalid read of size 4
==5663==    at 0x108FA2: move_item (spc.c:121)
==5663==    by 0x108F1A: move_aliens (spc.c:110)
==5663==    by 0x10975E: main (spc.c:300)
==5663==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==5663== 
==5663== 
==5663== Process terminating with default action of signal 11 (SIGSEGV)
==5663==  Access not within mapped region at address 0x10
==5663==    at 0x108FA2: move_item (spc.c:121)
==5663==    by 0x108F1A: move_aliens (spc.c:110)
==5663==    by 0x10975E: main (spc.c:300)
==5663==  If you believe this happened as a result of a stack
==5663==  overflow in your program's main thread (unlikely but
==5663==  possible), you can try to increase the size of the
==5663==  main thread stack using the --main-stacksize= flag.
==5663==  The main thread stack size used in this run was 8388608.
==5663== 
==5663== HEAP SUMMARY:
==5663==     in use at exit: 309,711 bytes in 523 blocks
==5663==   total heap usage: 534 allocs, 11 frees, 318,802 bytes allocated
==5663== 
==5663== LEAK SUMMARY:
==5663==    definitely lost: 0 bytes in 0 blocks
==5663==    indirectly lost: 0 bytes in 0 blocks
==5663==      possibly lost: 0 bytes in 0 blocks
==5663==    still reachable: 309,711 bytes in 523 blocks
==5663==         suppressed: 0 bytes in 0 blocks
==5663== Rerun with --leak-check=full to see details of leaked memory
==5663== 
==5663== For counts of detected and suppressed errors, rerun with: -v
==5663== Use --track-origins=yes to see where uninitialised values come from
==5663== ERROR SUMMARY: 148 errors from 4 contexts (suppressed: 0 from 0)
