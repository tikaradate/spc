==3102== Memcheck, a memory error detector
==3102== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3102== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3102== Command: ./a.out
==3102== Parent PID: 3044
==3102== 
==3102== Invalid read of size 4
==3102==    at 0x1094A4: move_item (spc.c:207)
==3102==    by 0x10964D: move_bombas (spc.c:252)
==3102==    by 0x10A260: main (spc.c:505)
==3102==  Address 0x14 is not stack'd, malloc'd or (recently) free'd
==3102== 
==3102== 
==3102== Process terminating with default action of signal 11 (SIGSEGV)
==3102==  Access not within mapped region at address 0x14
==3102==    at 0x1094A4: move_item (spc.c:207)
==3102==    by 0x10964D: move_bombas (spc.c:252)
==3102==    by 0x10A260: main (spc.c:505)
==3102==  If you believe this happened as a result of a stack
==3102==  overflow in your program's main thread (unlikely but
==3102==  possible), you can try to increase the size of the
==3102==  main thread stack using the --main-stacksize= flag.
==3102==  The main thread stack size used in this run was 8388608.
==3102== 
==3102== HEAP SUMMARY:
==3102==     in use at exit: 292,469 bytes in 655 blocks
==3102==   total heap usage: 664 allocs, 9 frees, 305,548 bytes allocated
==3102== 
==3102== LEAK SUMMARY:
==3102==    definitely lost: 0 bytes in 0 blocks
==3102==    indirectly lost: 0 bytes in 0 blocks
==3102==      possibly lost: 0 bytes in 0 blocks
==3102==    still reachable: 292,469 bytes in 655 blocks
==3102==         suppressed: 0 bytes in 0 blocks
==3102== Rerun with --leak-check=full to see details of leaked memory
==3102== 
==3102== For counts of detected and suppressed errors, rerun with: -v
==3102== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
